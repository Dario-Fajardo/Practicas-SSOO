#!/bin/bash

TRACE_ID=$(uuidgen)
PROGRAM=""
PROGRAM_ARGS=""
STRACE_ARGS="0"
STRACE_ARG_LIST=""
ATTACH=""
PATTCH=""
TRACER_PID=""
TRACEE_PID=""
KILL_TRACES=""
ATTACH_PROGRAM=""
PATTCH_PID=""

# Funciones
usage() {
  echo "scdebug [-h] [-sto arg] [-v | -vall] [-k] [prog [arg …] ] [-nattch progtoattach …] [-pattch pid1 … ]
--help o -h para más información"
}

arg_check() {
  while [ -n "$1" ]; do
    case "$1" in
      -sto )
        STRACE_ARGS="1"
        ;;
      -nattch )
        ATTACH="1"
        PATTCH=""
        ;;
      -pattch )
        PATTCH="1"
        ATTACH=""
        ;;
      -k)
        KILL_TRACES="1"
        shift
        kill_traces 2> /dev/null
        exit 0
        ;;
      --help )
        help
        exit 0
        ;;
      -h )
        help
        exit 0
        ;;
      -* )
        if [ "$STRACE_ARGS" = "1" ]; then
          STRACE_ARG_LIST+="$1 "
        else 
          if [ -n "$PROGRAM" ]; then
            PROGRAM_ARGS+=" $1"
          else 
            echo "Argumento $1 no válido"
            usage
            exit 1           
          fi
        fi
        ;;
      * )
        if [ -n "$PATTCH" ]; then
          PATTCH_PID="$1"
          pattch_option
        fi
        if [ -n "$ATTACH" ]; then
          ATTACH_PROGRAM="$1"
          nattch_option
        fi
        if [ -n "$PROGRAM" ]; then
          PROGRAM_ARGS+=" $1"
        else
          PROGRAM="$1"
        fi
        ;;
    esac
    shift
  done
}

help() {
  echo "Este programa permite hacer la traza de las llamadas al sistema de cierto proceso
  pasado por línea de comandos, esta traza se guarda en un archivo y se envía a la carpeta
  ~/.scdebug/[comando introducido]/
  
  -sto [args]: se envían argumentos al comando strace que se ocupa de la traza

  -k: se matan todos los procesos de traza que estén corriendo junto con los trazados
  
  -nattch [command ... ]: se hace strace con attach a el último proceso de cada uno de los que se pasen por argumento

  -pattch [PID ...]: se hace strace con attach a cada uno de los PID pasados por argumento"
}

tracer_and_tracee_pid() {
  TRACEE_PID=$(pgrep -n "$PROGRAM")
  TRACER_PID=$(cat 2> /dev/null /proc/$TRACEE_PID/status | grep "TracerPid" | cut -f 2)
}

kill_traces() {
  for i in $(ps -u $USER --no-header | sort -r | tr -s " " | cut -d " " -f 2); do
    if [ "$(cat /proc/$i/status | grep "TracerPid" | cut -f 2)" != "0" ]; then
      kill -9 $(cat /proc/$i/status | grep "TracerPid" | cut -f 2)
      kill -9 $i
    fi
  done
}

nattch_option () {
  PID=$(pgrep -n "$ATTACH_PROGRAM")
  if [ -z $PID ]; then
    echo "No hay ningún proceso abierto con el nombre $ATTACH_PROGRAM"
    exit 2
  fi
  echo "Programa a monitorizar: $ATTACH_PROGRAM"
  OUTPUT_FILE="$HOME/.scdebug/$ATTACH_PROGRAM/trace_$TRACE_ID.txt"
  OUTPUT_DIR="$HOME/.scdebug/$ATTACH_PROGRAM"
  mkdir -p $OUTPUT_DIR && (strace 2> /dev/null $STRACE_ARG_LIST -p $PID -o $OUTPUT_FILE& 2> /dev/null)
  ps -u $USER | tr -s " " | cut -d " " -f 2,5 2> /dev/null  
  TRACER_PID=$(cat /proc/$PID/status | grep "TracerPid" | cut -f 2)
  echo "PID del tracer: $TRACER_PID"
  echo "PID del tracee: $PID"
  echo
}

pattch_option() {
  PATTCH_PROGRAM="$(ps -p $PATTCH_PID --no-header | tr -s " " | cut -d " " -f 5)"
  if [ -z $PATTCH_PROGRAM ]; then
    echo "No hay ningún proceso abierto con el PID $PATTCH_PID"
    exit 2
  fi
  echo "Programa a monitorizar: $PATTCH_PROGRAM"
  OUTPUT_FILE="$HOME/.scdebug/$PATTCH_PROGRAM/trace_$TRACE_ID.txt"
  OUTPUT_DIR="$HOME/.scdebug/$PATTCH_PROGRAM"
  mkdir -p $OUTPUT_DIR && (strace 2> /dev/null $STRACE_ARG_LIST -p $PATTCH_PID -o $OUTPUT_FILE& 2> /dev/null)
  ps -u $USER | tr -s " " | cut -d " " -f 2,5 2> /dev/null
  TRACER_PID=$(cat /proc/$PATTCH_PID/status | grep "TracerPid" | cut -f 2)
  echo "PID del tracer: $TRACER_PID"
  echo "PID del tracee: $PATTCH_PID"
  echo
}

normal_strace() {
  OUTPUT_FILE="$HOME/.scdebug/$PROGRAM/trace_$TRACE_ID.txt"
  OUTPUT_DIR="$HOME/.scdebug/$PROGRAM"
  mkdir -p $OUTPUT_DIR && (strace 2> /dev/null $STRACE_ARG_LIST -o $OUTPUT_FILE $PROGRAM $PROGRAM_ARGS)
  tracer_and_tracee_pid
  echo "PID del tracer: $$"
  echo "PID del tracee: $TRACEE_PID"
  echo
  ps -u $USER 2> /dev/null | tr -s " " | cut -d " " -f 2,5
  exit 0
}

# Programa principal
arg_check "$@"

if [ -n "$ATTACH" ] || [ -n "$PATTCH" ]; then
  exit 0
else
  normal_strace& 2> /dev/null
fi